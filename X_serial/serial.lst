

HI-TECH Software PICC Macro Assembler V8.05PL2
Serial number: HCPIC-00000                            Mon Nov 13 00:14:52 2017

Licensed to: MITSOS FOREVER
     1                           	processor	16F84A
     2                           	opt	pw 79
     3                           	psect	__Z00000RS_,global,delta=1
     4                           	psect	text0,local,class=CODE,delta=2
     5                           	psect	text1,local,class=CODE,delta=2
     6                           	psect	text2,local,class=CODE,delta=2
     7                           	psect	text3,local,class=CODE,delta=2
     8                           	psect	text4,local,class=CODE,delta=2
     9                           	psect	rbss_0,global,class=BANK0,space=1,delta=
      +                          1
    10  0000                     
    11  0000                     
    12  0000                     
    13  0000                     
    14  0000                     
    15  0000                     
    16  0000                     
    17  0000                     
    18  0000                     
    19  0000                     
    20                           
    21                           	psect	__Z00000RS_
    22  003C                     
    23  003C                     
    24                           
    25                           	psect	text0
    26  0062                     _serial_begin
    27                           ;serial.c: 50: TRISA |= 1<<1;
    28  0062  1683               	bsf	3,5
    29  0063  1485               	bsf	5,1	;volatile
    30                           ;serial.c: 51: }
    31  0064  1283               	bcf	3,5
    32  0065  0008               	return
    33                           
    34                           	psect	text1
    35  0109                     _putch
    36                           ;	_bitno assigned to ?a_putch+0
    37  0000                     _putch$bitno	set	?a_putch
    38                           ;	_dly assigned to ?a_putch+1
    39  0000                     _putch$dly	set	?a_putch+1
    40                           ;	_c assigned to ?a_putch+2
    41  0000                     _putch$c	set	?a_putch+2
    42                           ;_c stored from w
    43  0109  1283               	bcf	3,5
    44  010A  00B4               	movwf	?a_putch+2
    45                           ;serial.c: 56: unsigned char bitno;
    46  010B  1005               	bcf	5,0
    47                           ;serial.c: 65: bitno = 12;
    48  010C  300C               	movlw	12
    49  010D  00B2               	movwf	?a_putch
    50  010E                     l5
    51                           ;serial.c: 66: do {
    52                           ;serial.c: 67: dly = (((10000000/9600)-(13*4*10
      +                          000000/4000000))/(3*4*10000000/4000000));
    53  010E  301E               	movlw	30
    54  010F  00B3               	movwf	?a_putch+1
    55  0110                     l8
    56                           ;serial.c: 68: do
    57                           ;serial.c: 69: ;
    58  0110  0BB3               	decfsz	?a_putch+1
    59  0111  2910               	goto	l8
    60                           ;serial.c: 71: if(c & 1)
    61  0112  1834               	btfsc	?a_putch+2,0
    62                           ;serial.c: 72: TxData = 1;
    63  0113  1405               	bsf	5,0
    64                           ;serial.c: 73: if(!(c & 1))
    65  0114  1834               	btfsc	?a_putch+2,0
    66  0115  2917               	goto	l10
    67                           ;serial.c: 74: TxData = 0;
    68  0116  1005               	bcf	5,0
    69  0117                     l10
    70                           ;serial.c: 75: c = (c >> 1) | 0x80;
    71  0117  1403               	bsf	3,0
    72  0118  0CB4               	rrf	?a_putch+2
    73                           ;serial.c: 76: } while(--bitno);
    74  0119  0BB2               	decfsz	?a_putch
    75  011A  290E               	goto	l5
    76                           ;serial.c: 77: asm("nop");
    77  011B  0000               	nop	;#
    78                           ;serial.c: 78: }
    79  011C  0008               	return
    80                           
    81                           	psect	text2
    82                           ;serial.c: 80: char
    83                           ;serial.c: 81: getch(void)
    84                           ;serial.c: 82: {
    85  0132                     _getch
    86                           ;	_bitno assigned to ?a_getch+0
    87  0000                     _getch$bitno	set	?a_getch
    88                           ;	_dly assigned to ?a_getch+1
    89  0000                     _getch$dly	set	?a_getch+1
    90                           ;serial.c: 83: unsigned char bitno;
    91                           ;serial.c: 92: while(RxData)
    92  0132                     l16
    93                           ;serial.c: 93: continue;
    94  0132  1283               	bcf	3,5
    95  0133  1885               	btfsc	5,1
    96  0134  2932               	goto	l16
    97                           ;serial.c: 94: dly = (((10000000/9600)-(3*4*100
      +                          00000/4000000))/(3*4*10000000/4000000))/2;
    98  0135  3010               	movlw	16
    99  0136  00A3               	movwf	?a_getch+1
   100  0137                     l20
   101                           ;serial.c: 95: do
   102                           ;serial.c: 96: ;
   103  0137  0BA3               	decfsz	?a_getch+1
   104  0138  2937               	goto	l20
   105                           ;serial.c: 98: if(RxData)
   106  0139  1885               	btfsc	5,1
   107  013A  2932               	goto	l16
   108                           ;serial.c: 99: continue;
   109                           ;serial.c: 100: bitno = 8;
   110  013B  3008               	movlw	8
   111  013C  00A2               	movwf	?a_getch
   112                           ;serial.c: 101: ca = 0;
   113  013D  018F               	clrf	_ca
   114  013E                     l24
   115                           ;serial.c: 102: do {
   116                           ;serial.c: 103: dly = (((10000000/9600)-(12*4*1
      +                          0000000/4000000))/(3*4*10000000/4000000));
   117  013E  301E               	movlw	30
   118  013F  00A3               	movwf	?a_getch+1
   119  0140                     l27
   120                           ;serial.c: 104: do
   121                           ;serial.c: 105: ;
   122  0140  0BA3               	decfsz	?a_getch+1
   123  0141  2940               	goto	l27
   124                           ;serial.c: 107: ca = (ca >> 1) | (RxData << 7);
   125  0142  1003               	bcf	3,0
   126  0143  1885               	btfsc	5,1
   127  0144  1403               	bsf	3,0
   128  0145  0C8F               	rrf	_ca
   129                           ;serial.c: 108: } while(--bitno);
   130  0146  0BA2               	decfsz	?a_getch
   131  0147  293E               	goto	l24
   132                           ;serial.c: 110: break;
   133                           ;serial.c: 111: }
   134                           ;serial.c: 114: return ca;
   135  0148  080F               	movf	_ca,w
   136                           ;serial.c: 115: }
   137  0149  0008               	return
   138                           
   139                           	psect	text3
   140                           ;serial.c: 117: char
   141                           ;serial.c: 118: getche(void)
   142                           ;serial.c: 119: {
   143  0077                     _getche
   144                           ;	_c assigned to ?a_getche+0
   145  0000                     _getche$c	set	?a_getche
   146                           ;serial.c: 120: char c;
   147  0077  1283               	bcf	3,5
   148  0078  2132               	call	_getch
   149  0079  00A2               	movwf	?a_getche
   150  007A  2109               	call	_putch
   151                           ;serial.c: 123: return c;
   152  007B  0822               	movf	?a_getche,w
   153                           ;serial.c: 124: }
   154  007C  0008               	return
   155                           
   156                           	psect	text4
   157  0000                     
   158  0000                     
   159  0000                     
   160  0000                     
   161  0000                     
   162  0000                     
   163  0000                     
   164  0000                     
   165  0000                     
   166  0000                     
   167  0000                     
   168  0000                     
   169  0000                     
   170  0000                     
   171  0000                     
   172  0000                     
   173  0000                     
   174  0000                     
   175  0000                     
   176  0000                     
   177  0000                     
   178  0000                     
   179  0000                     
   180  0000                     
   181  0000                     
   182  0000                     
   183  0000                     
   184  0000                     
   185  0000                     
   186  0000                     
   187  0000                     
   188  0000                     
   189  0000                     
   190  0000                     
   191  0000                     
   192  0000                     
   193  0000                     
   194  0000                     
   195  0000                     
   196  0000                     
   197  0000                     
   198  0000                     
   199  0000                     
   200  0000                     
   201  0000                     
   202  0000                     
   203  0000                     
   204  0000                     
   205  0000                     
   206  0000                     
   207  0000                     
   208  0000                     
   209  0000                     
   210  0000                     
   211  0000                     
   212  0000                     
   213  0000                     
   214  0000                     
   215  0000                     
   216  0000                     
   217  0000                     
   218  0000                     
   219  0000                     
   220  0000                     
   221  0000                     
   222  0000                     
   223  0000                     
   224  0000                     
   225  0000                     
   226  0000                     
   227  0000                     
   228  0000                     
   229                           
   230                           	psect	rbss_0
   231  000F                     _ca
   232  000F                     	ds	1


HI-TECH Software PICC Macro Assembler V8.05PL2
Symbol Table                                          Mon Nov 13 00:14:52 2017

           l5 010E             l8 0110       ?a_getch 0022  
          l10 0117            l20 0137            l24 013E  
          l16 0132            l27 0140            _ca 000F  
     ?a_putch 0032      ?a_getche 0022        _getche 0077  
       _getch 0132         _putch 0109         status 0003  
  clear_bank0 0017  _serial_begin 0062  
